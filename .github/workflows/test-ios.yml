name: iOS-Starter-Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  test:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@master
    - name: Set XCode Version
      run: sudo xcode-select -s /Applications/Xcode_11.app
    - name: Install Dependencies
      run: |
        cd Example
        pod install --repo-update
      shell: bash
    - uses: ty0x2333/cocoapods-action@master
      with:
        additional_build_params: -destination 'platform=iOS Simulator,name=iPhone 11,OS=15.2'
        additional_lint_params: --private

#   build:
#     name: Build and Test default scheme using any available iPhone simulator
#     runs-on: macos-latest
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Set Default Scheme
#         run: |
#           scheme_list=$(xcodebuild -list -json | tr -d "\n")
#           default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
#           echo $default | cat >default
#           echo Using default scheme: $default
#       - name: Build
#         env:
#           scheme: ${{ 'default' }}
#           platform: ${{ 'iOS Simulator' }}
#         run: |
#           # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
#           device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
#           if [ $scheme = default ]; then scheme=$(cat default); fi
#           if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
#           file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
#           xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=iPhone 11"
#       - name: Test
#         env:
#           scheme: ${{ 'default' }}
#           platform: ${{ 'iOS Simulator' }}
#         run: |
#           # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
#           device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
#           if [ $scheme = default ]; then scheme=$(cat default); fi
#           if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
#           file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
#           xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
